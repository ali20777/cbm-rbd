ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
}
#list(siglist=siglist, ftslist=ftslist)
# now get reliability curves for the tnows
res <- data.frame()
for (tnow in tnowvec){
# index in ftschron, siglist, ftslist for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[tnwoi], n0y0 = n0y0, beta = beta,
fts = ftslist[tnowi], tnow = tnow, hor = hor,
seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
as.list(rep(NA, length(ftschron)))
head(brsysign)
names(ctypes)
names(ctypes) %in% names(brsysign)
which(names(ctypes) %in% names(brsysign))
asdf <- data.frame(C=1, H=1, M=1, P=1)
which(names(ctypes) %in% names(asdf))
asdf <- data.frame(C=1, H=1, P=1)
which(names(ctypes) %in% names(asdf))
sysrelnowhist <- function(sys, ctypes, compfts, n0y0=1, beta=1, tnowvec=1, hor=1, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
}
asdf <- sysrelnowhist(br, brctypes, brcompfts)
dim(asdf$siglist[[1]])
dim(asdf$siglist[[2]])
dim(asdf$siglist[[1]])
asdf$prctypes
brcompfts <- list(C1 = NA, C2 = 6, C3 = 7, C4 = NA, H = NA, M = 5, P1 = NA, P2 = 3, P3 = 4, P4 = NA)
asdf <- sysrelnowhist(br, brctypes, brcompfts)
asdf$prctypes
dim(asdf$siglist[[1]])
dim(asdf$siglist[[2]])
dim(asdf$siglist[[3]])
dim(asdf$siglist[[4]])
dim(asdf$siglist[[5]])
dim(asdf$siglist[[6]])
n0y0
brn0y0
brn0y0[c(1,2,4)]
asdf <- data.frame()
asdf
rbind(asdf, data.frame(a=1:5, b=6:10))
asdf <- rbind(asdf, data.frame(a=1:5, b=6:10))
asdf
asdf <- rbind(asdf, data.frame(a=1:5, b=6:10))
asdf
asdf <- sysrelnowhist(br, brctypes, brcompfts)
asdf$ftslist[[1]]
asdf$prctypes
asdf$ftslist[[2]]
asdf$ftslist[[3]]
asdf$ftslist[[4]]
asdf$ftslist[[5]]
asdf$ftslist[[6]]
asdf$ftslist[[4]]
asdf$ftslist[[4]][c(1,2,4)]
asdf$ftslist[4][c(1,2,4)]
asdf$ftslist[4]
asdf$ftslist[4][c(1,2,4)]
asdf$ftslist[[4]][c(1,2,4)]
brn0y0
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[tnwoi], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brtnow0 <- sysrelnowhor(brsysign, brn0y0, brbeta, brfts0, tnow=0, hor=10)
qplot(brtnow0$t, brtnow0$rel, type="l")
qplot(brtnow0$t, brtnow0$rel)
brtnow8 <- sysrelnowhor(br8sysign, brn0y0, brbeta, brfts8, tnow=8, hor=10)
qplot(brtnow8$t, brtnow8$rel)
brtnow8H <- sysrelnowhor(br8Hsysign, brn0y0[-2], brbeta[-2], brfts8[-2], tnow=8, hor=10)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0,8), hor=10)
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[tnowi], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0,8), hor=10)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0.1,8), hor=10)
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
print(head(siglist[tnowi]))
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[tnowi], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0,8), hor=10)
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
print(tnow)
print(tnowi)
print(dim(siglist[tnowi]))
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[tnowi], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0,8), hor=10)
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
print(tnow)
print(tnowi)
print(dim(siglist[[tnowi]]))
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[[tnowi]], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0,8), hor=10)
brcompfts <- list(C1 = NA, C2 = 6, C3 = 7, C4 = NA, H = NA, M = NA, P1 = NA, P2 = 3, P3 = 4, P4 = NA)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0,8), hor=10)
dim(br8sysign)
dim(br8Hsysign)
head(brhist1)
table(brhist1$tnow)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(group = tnow) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1 <- ggplot(brhist1, aes(x = t, y = rel))
histfig1
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
cat("asdf=",1)
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
cat("calculating sysrel for tnow = ", tnow, " ...")
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[[tnowi]], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
cat("calculating sysrel for tnow = ", tnow, "...\n")
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[[tnowi]], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
br1hist$tnow <- as.factor(br1hist$tnow)
brhist1$tnow <- as.factor(brhist1$tnow)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
sysrelnowhist <- function(sys, ctypes, compfts, n0y0, beta, tnowvec, hor, seqlen = 101, prior = FALSE){
K <- length(ctypes)
# calculate survsign only when something fails
# create fts only the same number of times
ftschron <- c(0, sort(unlist(compfts))) # when something happens
# create list with ftschron-th entry the survsign / fts valid from time in corresponding ftschron element;
# first element corresponds to situation at system startup
siglist <- as.list(rep(list(NULL), length(ftschron)))
siglist[[1]] <- computeSystemSurvivalSignature(sys)
ftslist <- as.list(rep(NA, length(ftschron)))
ftslist[[1]] <- as.list(rep(list(NULL), K))
# which component types are still in the system?
presentctypes <- as.list(rep(NA, length(ftschron)))
presentctypes[[1]] <- 1:K
# now go through ftschron (first element already done) and calculate survsign and fts
failedcomps <- numeric(0)
for (i in 2:length(ftschron)){
failedcomps <- c(failedcomps, names(ftschron[i]))
reducedsys <- induced_subgraph(sys, vids=V(sys)[!(name %in% failedcomps)])
siglist[[i]] <- computeSystemSurvivalSignature(reducedsys)
ftslisti <- ftslist[[i-1]]
ftslistiindex <- which(sapply(ctypes, function(ctypesl) names(ftschron[i]) %in% ctypesl))
ftslisti[[ftslistiindex]] <- c(ftslisti[[ftslistiindex]], ftschron[i])
ftslist[[i]] <- ftslisti
presentctypes[[i]] <- which(names(ctypes) %in% names(siglist[[i]]))
}
#list(siglist=siglist, ftslist=ftslist, prctypes = presentctypes)
# now get reliability curves for each tnow
res <- data.frame()
for (tnow in tnowvec){
# index in siglist, ftslist, presentctypes for current (tnow) status
tnowi <- max(which(ftschron <= tnow))
prctps <- presentctypes[[tnowi]]
cat("calculating sysrel for tnow =", tnow, "...\n")
current <- data.frame(tnow = tnow,
sysrelnowhor(survsign = siglist[[tnowi]], n0y0 = n0y0[prctps],
beta = beta[prctps], fts = ftslist[[tnowi]][prctps],
tnow = tnow, hor = hor, seqlen = seqlen, prior = prior))
res <- rbind(res, current)
}
return(res)
}
brcompfts <- list(C1 = NA, C2 = 6, C3 = 7, C4 = NA, H = NA, M = 5, P1 = NA, P2 = 3, P3 = 4, P4 = NA)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
brhist1$tnow <- as.factor(brhist1$tnow)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
brcompfts <- list(C1 = NA, C2 = 6, C3 = 7, C4 = NA, H = 8, M = 5, P1 = NA, P2 = 3, P3 = 4, P4 = NA)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
brcompfts <- list(C1 = NA, C2 = 6, C3 = 7, C4 = NA, H = NA, M = 5, P1 = 5, P2 = 3, P3 = 4, P4 = NA)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
brhist1$tnow <- as.factor(brhist1$tnow)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
brcompfts <- list(C1 = NA, C2 = 6, C3 = 7, C4 = NA, H = NA, M = 5, P1 = 4, P2 = 3, P3 = 4, P4 = NA)
brhist1 <- sysrelnowhist(br, brctypes, brcompfts, brn0y0, brbeta, c(0:8), hor=10)
brhist1$tnow <- as.factor(brhist1$tnow)
histfig1 <- ggplot(brhist1, aes(x = t, y = rel)) + ylim(0, 1) +
geom_line(aes(group = tnow, colour = tnow)) + xlab(expression(t)) + ylab(expression(R(t)))
histfig1
